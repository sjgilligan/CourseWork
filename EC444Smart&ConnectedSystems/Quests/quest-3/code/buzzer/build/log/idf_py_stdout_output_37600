[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\EC444\Team4-Blaizot-Cruanes-Diallo-Gilligan\quest-3\code\buzzer\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/esp-idf-v5.3.1/EC444/Team4-Blaizot-Cruanes-Diallo-Gilligan/quest-3/code/buzzer/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/buzzer_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable main.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.3.1/EC444/Team4-Blaizot-Cruanes-Diallo-Gilligan/quest-3/code/buzzer/build/main.bin
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\EC444\Team4-Blaizot-Cruanes-Diallo-Gilligan\quest-3\code\buzzer\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.3.1/EC444/Team4-Blaizot-Cruanes-Diallo-Gilligan/quest-3/code/buzzer/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.3.1/EC444/Team4-Blaizot-Cruanes-Diallo-Gilligan/quest-3/code/buzzer/build/main.bin"
main.bin binary size 0x27b60 bytes. Smallest app partition is 0x100000 bytes. 0xd84a0 bytes (84%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.3.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Espresptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev5
Serial port COM4
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a4:cf:12:78:57:44
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00037fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16360...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16360 compressed) at 0x00001000 in 0.8 seconds (effective 269.8 kbit/s)...
Hash of data verified.
Compressed 162656 bytes to 86931...
Writing at 0x00010000... (16 %)
Writing at 0x0001b4c0... (33 %)
Writing at 0x00021136... (50 %)
Writing at 0x00026802... (66 %)
Writing at 0x0002de30... (83 %)
Writing at 0x00035bc9... (100 %)
Wrote 162656 bytes (86931 compressed) at 0x00010000 in 2.3 seconds (effective 572.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 413.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
essif/frameworks/esp-idf-v5.3.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/frameworks/esp-idf-v5.3.1/EC444/Team4-Blaizot-Cruanes-Diallo-Gilligan/quest-3/code/buzzer/build -P C:/Espressif/frameworks/esp-idf-v5.3.1/components/esptool_py/run_serial_tool.cmake"
